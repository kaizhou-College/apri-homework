一，分组：班长 ，学习委员，纪律委员
======================================================
一，servlet的三种创建方式
	1，实现接口：Servlet接口
		生命周期:
			当客户第1次请求该servlet的时候就创建并初始化
			当客户请求一次就调用一次服务的方法
			
			当服务器关闭，项目重新部署，删除项目servlet销毁
			
		在servlet的配置中配置参数：ServletConfig来接受
	2，继承GenericServlet
	3, 继承HttpServlet(推荐)
	4，自定义
	
====================================================
二，三个枚举
	1，获取参数的枚举			getParamaterNames();
		编码
	2，获取header请求头		getHeaderNames();
	3，获取域中的参数 		getAttributeNames();
	
	4,获取
		uri   :相对路径
		url   ：绝对路径		 getRequestURL();
		资源     ：servlet的名字  getServletPath();
		项目名 :项目名		 getContextPath();
	
====================================================
三，过滤器：门卫

	生命周期：
		是在web容器启动就创建并初始化了(servlet没有初始化)
		
		在符合web.xml中的配置的拦截规则就开始拦截doFilter
		
		在服务器关闭，项目重新部署，删除销毁
	应用：
		1，解决编码
		2，权限问题(登录(讲用户名保存到session))
		3，过滤非法字符
====================================================
四，监听器：秘书
	1，request监听器
	2，session监听器
	3，application监听器(ServletContext----context -----上下文)
	4，session域绑定监听器（值的添加和移除）(不需要在web.xml中配置)


	总结：
		在web容器启动的时候创建，比过滤器先创建
			监听域对象创建和销毁
		在服务器关闭，项目重新部署，删除销毁
	应用：在线人数 ----- 访问量 -----请求量
==========================================================
五，xml解析
	1，dom解析 
		缺点：加载整个文档到内存----构成文档树-----很耗内存
	2，sax解析  基于节点事件
		不需要加载这个文档到内存，从上往下读取web文档，产生一系列事件
		文档开始事件
			元素开始事件<name>
					元素体的事件:内容
			元素结束事件</name>
		文档结束事件	
========================================================
六，Ajax  异步请求   局部刷新
	1,获取Ajax对象(获取手机)
	2,设置请求方式，url 等参数(拨和打电话)
	3,设置回调函数(监听电话)
	4,定义回调函数(通话)
====================================================
七，jndi :java命名与目录接口
	java name and document interface
	
	(jdni相当于做一个菜单 ：根据菜名来点菜)
	做菜单的方式：
	1，自己做：			根据context.xml的名字来获取值
	2，web容器帮我们做：   根据context.xml的名字前面加java:comp/env获取值(对象  当个数据)
		连接池：connection Pool 装链接
	
	
	
	
	
	
	

