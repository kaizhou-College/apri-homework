1.写一个例子，测试filter和servlet的生命周期

2.写一个用户名登录的jsp，可以填写密码和用户名，提交到登录的Encodeservlet中,写一个filter过滤请求解决
  请求的中文乱码问题（get/post）和响应的中文乱码问题，然后在servlet中得到数据，然后打印输出到客户端

3.在WebRoot目录下面建一个save文件夹，里面写一个save.jsp,jsp中写上"这里是受保护的页面"，然后复制上题的登录页面，重命名
  然后以post方式提交到LoginServlet中,在servlet中解决post方式的中文乱码，然后拿到用户名,将用户名设置到session中，
  然后重定向“/save/save.jsp”,准备一个过滤器，过滤掉“/save/save.jsp”的请求，在doFilter()中检查session里面的值是否为空，
  如果为空，重定向到登录页面。注意:filter配置。


4.写一个jsp,有一个表单，可以输入用户名，选择性别，选择爱好多个复选框，个人资料的文本域，用post提交到一个Servlet，写一个filter过滤请求
  遍历所有的值，如果有为null，就给它一个空字符串，然后在servlet中得到数据，要解决中文乱码问题,然后打印输出到客户端.

5.写一个jsp，三个文本框，分别填写姓名，住址，工作单位,以post方式提交到StrServlet(继承GenericServlet),在web-inf准备一个
  str.properties文件
  文件内容: 二狗子 = **  (姓名)
            地狱 = ***    (住址)
            中央情报局=****  (工作单位)

  写一个Filter,在init()读取str.properties内容,在doFilter()中列出所有表单的值，如果有出现上述中的字符就进行替换,
  过滤之后，在StrServlet中拿到数据,打印输出到客户端
  
6.动态密码验证

 (1)写一个登录页面login.jsp，可以填入用户名和密码,以post方式提交到LoginServlet（继承GenericServlet）中，在LoginServlet中拿到
    用户名和密码,判断用户名和密码是不是都是"admin",如果是，重定向到dync.jsp，否则重定向到error.jsp。

 (2)写一个过滤器LoginFilter只针对loginServlet的请求，进行过滤,在登录请求重回LoginFilter之后，也就是下面的要写的代码
    必须在doFilter()之后,产生一个六位的整数(提示:Math.random()),将这个整数写到硬盘的一个dync.txt中保存起来，另外将这个
    整数设置到session中，关闭响应的输出流。

 (3)在dync.jsp,有一个表单，其中“  请输入您的动态密码:”的文本框,你要从dync.txt中找到动态密码，填入到文本框中,然后以post方式
    提交到DyncServlet(继承HttpServlet,重写doPost())中。

 (4)在DyncServlet中,拿到表单提交过来的值，拿到session内的值，如果两个值相等，转发到成功页面，如果不相等，重定向到登录页面.


7.超级挑战题
   将我们原来的MVC模式中  总控制类(ActionServlet--Servlet实现)用过滤器(ActionFilter--Filter实现)来实现，
   先进入一个解决中文乱码的EncodeFilter过滤器，然后再进入ActionFilter主过滤器，那么这两个过滤器只过滤以.action结尾
   的请求，那意思就是<url-pattern>*.action</url-pattern>,在ActionFilter中实现init()和doFilter（）方法，init()读取属性文件
   doFilter（）根据属性文件，调用到相应的Action,返回ActionForward(),进行转发或者重定向

   注意:(1)EncodeFilter的配置信息必须写在ActionFilter之前
       （2）ActionFilter的doFilter()必须去掉(原因自己找)

   

   用Servlet实现的MVC模式----struts1.0
   用Filter实现的MVC模式-----struts2.0
  